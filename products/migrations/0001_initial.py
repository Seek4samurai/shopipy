# Generated by Django 5.0 on 2023-12-09 17:53

import django.db.models.deletion
import products.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Brick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'bricks',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'collections',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('gender', models.CharField(help_text='Enter comma-separated values for genders (e.g., Men, Women, Kids)', max_length=150)),
                ('mrp', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('wsp', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('style_code', models.CharField(blank=True, max_length=255, null=True)),
                ('style_2', models.CharField(blank=True, max_length=255, null=True)),
                ('image_1', models.FileField(blank=True, help_text='Upload a valid portrait image', null=True, upload_to='media/')),
                ('image_2', models.FileField(blank=True, null=True, upload_to='media/')),
                ('image_3', models.FileField(blank=True, null=True, upload_to='media/')),
                ('image_4', models.FileField(blank=True, null=True, upload_to='media/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('go_live_date', models.DateTimeField(help_text='Date after which they can be booked')),
                ('style_region', models.CharField(blank=True, help_text='Enter comma-separated values (e.g., Western, South_Indian, North_Indian)', max_length=150, null=True)),
                ('stock_items', models.JSONField(default=products.models.default_stock_items, help_text='Refer to documentation & jsonformatter.org.')),
                ('is_active', models.BooleanField(default=False, help_text="Products go live only if they're active")),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand', to='products.brand')),
                ('brick', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brick', to='products.brick')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='products.category')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection', to='products.collection')),
                ('uploaded_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploader', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ('-created',),
            },
        ),
    ]
